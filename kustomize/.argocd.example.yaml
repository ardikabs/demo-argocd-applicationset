argocd:
  # Whether this service allowed to be deployed for this domain and environment combination
  # If false, the service will be completely excluded from deployment
  enabled: false

  # Target namespace for application deployment
  namespace: bar

  # Whether to clean up resources when the application is deleted (as indicated in `enabled` field)
  cleanupOnDeletion: true

  # Custom labels to be applied to the ArgoCD Application resource
  labels:
    custom.labels.for.argocdapp: labelvalue

  # Custom annotations to be applied to the ArgoCD Application resource
  annotations:
    custom.annotations.for.argocdapp: annotationvalue

  # ArgoCD sync policy configuration
  syncPolicy:
    # Enable automated sync with self-healing
    # Reference https://argo-cd.readthedocs.io/en/stable/user-guide/auto_sync/
    automated:
      selfHeal: true
      prune: true
      allowEmpty: true

    # Additional sync options
    # Reference https://argo-cd.readthedocs.io/en/latest/user-guide/sync-options/
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true

  # Resources and fields to ignore during sync (useful for external modifications)
  # Reference https://argo-cd.readthedocs.io/en/stable/user-guide/diffing/
  ignoreDifferences:
    - group: networking.istio.io
      kind: VirtualService
      jqPathExpressions:
        # ignore any changes to the vs.spec.http[*].match[*].headers
        # which will help us to enable header-based canary through argo-rollouts
        - .spec.http[]? | select(any(.match[]?; has("headers")))
        # ignore the vs.spec.http[*].route[*] that has "weight" field
        # as the field will be managed by argo-rollouts during canary deployment
        - .spec.http[].route[]? | select(has("weight"))
    - group: ""
      kind: Service
      jsonPointers:
        - /spec/selector/rollouts-pod-template-hash
